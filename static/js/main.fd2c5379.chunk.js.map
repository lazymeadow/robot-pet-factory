{"version":3,"sources":["components/overview/Overview.js","components/TwoPanel.js","components/Tabs.js","components/GameWrapper.js","components/factory/Factory.js","components/kennel/Kennel.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Overview","ViewContext","Consumer","showFactory","showKennel","className","onClick","TwoPanel","tabsContent","mainContent","TabContext","createContext","Tabs","children","useState","currentTab","setCurrentTab","Provider","value","isCurrentTab","tabKey","TabsContainer","Tab","role","TabContent","GameContext","actionTypes","gameReducer","state","action","type","newTotalCoins","totalCoins","localStorage","setItem","GameWrapper","useReducer","parseInt","getItem","dispatch","addCoins","Factory","src","alt","Kennel","Header","isCurrentViewFactory","isCurrentViewKennel","isCurrentViewOverview","showOverview","href","views","App","viewContent","currentView","setCurrentView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd2c5379.chunk.js","sourcesContent":["import {ViewContext} from '../../App';\r\n\r\n\r\nexport default function Overview () {\r\n\treturn (\r\n\t\t<ViewContext.Consumer>\r\n\t\t\t{({showFactory, showKennel}) => (\r\n\t\t\t\t<div className=\"overview\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Factory</h2>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>Interesting Stats</li>\r\n\t\t\t\t\t\t\t<li>What are they</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<button onClick={showFactory}>Go to Factory</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Pet Kennel</h2>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>Interesting Stats</li>\r\n\t\t\t\t\t\t\t<li>What are they</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<button onClick={showKennel}>Go to Pets</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</ViewContext.Consumer>\r\n\t);\r\n}","export default function TwoPanel ({tabsContent, mainContent}) {\r\n\treturn (\r\n\t\t<div className=\"two-panel\">\r\n\t\t\t<div className=\"tabs-panel\">\r\n\t\t\t\t{tabsContent}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"main-panel\">\r\n\t\t\t\t{mainContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import {createContext, useState} from 'react';\r\n\r\n\r\nconst TabContext = createContext();\r\n\r\nfunction Tabs ({children}) {\r\n\tconst [currentTab, setCurrentTab] = useState(0);\r\n\treturn (\r\n\t\t<TabContext.Provider value={{\r\n\t\t\tcurrentTab,\r\n\t\t\tsetCurrentTab,\r\n\t\t\tisCurrentTab: (tabKey) => currentTab === tabKey\r\n\t\t}}>\r\n\t\t\t{children}\r\n\t\t</TabContext.Provider>\r\n\t);\r\n}\r\n\r\nfunction TabsContainer ({children}) {\r\n\treturn (\r\n\t\t<div className={'tabs-container'}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Tab ({children, tabKey}) {\r\n\treturn (\r\n\t\t<TabContext.Consumer>\r\n\t\t\t{({isCurrentTab, setCurrentTab}) => (\r\n\t\t\t\t<div className={`tab${isCurrentTab(tabKey) ? ' current' : ''}`}\r\n\t\t\t\t\t role={'button'}\r\n\t\t\t\t\t onClick={isCurrentTab(tabKey) ? null : () => setCurrentTab(tabKey)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</TabContext.Consumer>\r\n\t);\r\n}\r\n\r\nfunction TabContent ({children, tabKey}) {\r\n\treturn (\r\n\t\t<TabContext.Consumer>\r\n\t\t\t{({isCurrentTab}) => isCurrentTab(tabKey) && (\r\n\t\t\t\t<div className={'tab-content'}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</TabContext.Consumer>\r\n\t);\r\n}\r\n\r\nexport {TabsContainer, Tab, Tabs, TabContent};","import {createContext, useReducer} from 'react';\r\n\r\nconst GameContext = createContext();\r\n\r\nconst actionTypes = {\r\n\taddCoins: 'addCoins'\r\n}\r\n\r\nconst gameReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.addCoins:\r\n\t\t\t// calculate the coins to add\r\n\t\t\tconst numCoinsToAdd = 1;\r\n\r\n\t\t\tconst newTotalCoins = state.totalCoins + numCoinsToAdd;\r\n\r\n\t\t\t// save new coin total to local storage\r\n\t\t\t// FIXME: make cheat proof\r\n\t\t\tlocalStorage.setItem('totalCoins', newTotalCoins);\r\n\r\n\t\t\treturn {...state, totalCoins: newTotalCoins};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nfunction GameWrapper({children}) {\r\n\tconst getInitialState = () => ({\r\n\t\ttotalCoins:  parseInt(localStorage.getItem('totalCoins')) || 0\r\n\t});\r\n\r\n\tconst [state, dispatch] = useReducer(gameReducer, {}, getInitialState);\r\n\r\n\treturn (\r\n\t\t<GameContext.Provider value={\r\n\t\t\t{\r\n\t\t\t\t...state,\r\n\t\t\t\taddCoins: () => dispatch({type: actionTypes.addCoins})\r\n\t\t\t}\r\n\t\t}>\r\n\t\t\t{children}\r\n\t\t</GameContext.Provider>\r\n\t)\r\n}\r\n\r\nexport {GameContext, GameWrapper};","// import {ViewContext} from '../../App';\r\nimport TwoPanel from '../TwoPanel';\r\nimport {Tab, TabContent, Tabs, TabsContainer} from '../Tabs';\r\nimport {GameContext} from '../GameWrapper';\r\n\r\n\r\nexport default function Factory () {\r\n\tconst renderTabs = () => (\r\n\t\t<GameContext.Consumer>\r\n\t\t\t{({totalCoins}) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h2>Factory</h2>\r\n\t\t\t\t\t<Tabs>\r\n\t\t\t\t\t\t<TabsContainer>\r\n\t\t\t\t\t\t\t<Tab tabKey={0}>Upgrades</Tab>\r\n\t\t\t\t\t\t\t<Tab tabKey={1}>Stats</Tab>\r\n\t\t\t\t\t\t\t<Tab tabKey={2}>Achievements</Tab>\r\n\t\t\t\t\t\t</TabsContainer>\r\n\t\t\t\t\t\t<TabContent tabKey={0}>Upgrades go here</TabContent>\r\n\t\t\t\t\t\t<TabContent tabKey={1}>\r\n\t\t\t\t\t\t\tStats go here\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>Click Count: {totalCoins}</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</TabContent>\r\n\t\t\t\t\t\t<TabContent tabKey={2}>Achivements go here</TabContent>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</GameContext.Consumer>\r\n\t);\r\n\r\n\tconst renderMain = () => (\r\n\t\t<GameContext.Consumer>\r\n\t\t\t{({addCoins}) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h2>Here we go</h2>\r\n\t\t\t\t\t<button className={'factory'} onClick={addCoins}>\r\n\t\t\t\t\t\t<img src={''} alt={'the factory'}/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</GameContext.Consumer>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TwoPanel tabsContent={renderTabs()} mainContent={renderMain()}/>\r\n\t);\r\n}","import {ViewContext} from '../../App';\r\nimport TwoPanel from '../TwoPanel';\r\n\r\n\r\nexport default function Kennel () {\r\n\tconst renderTabs = () => <h2>Kennel</h2>;\r\n\r\n\tconst renderMain = () => \"it's exciting\";\r\n\r\n\treturn (\r\n\t\t<ViewContext.Consumer>\r\n\t\t\t{() => (\r\n\t\t\t\t<TwoPanel tabsContent={renderTabs()} mainContent={renderMain()} />\r\n\t\t\t)}\r\n\t\t</ViewContext.Consumer>\r\n\t);\r\n}","import {GameContext} from './GameWrapper';\r\nimport {ViewContext} from '../App';\r\n\r\n\r\nexport default function Header () {\r\n\treturn (\r\n\t\t<ViewContext.Consumer>\r\n\t\t\t{({isCurrentViewFactory, isCurrentViewKennel, isCurrentViewOverview, showFactory, showKennel, showOverview}) => (\r\n\t\t\t\t<GameContext.Consumer>\r\n\t\t\t\t\t{({totalCoins}) => (\r\n\t\t\t\t\t\t<header>\r\n\t\t\t\t\t\t\t<h1><a href={'/'}>Robot Pets</a></h1>\r\n\t\t\t\t\t\t\t<nav>\r\n\t\t\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t\t\t<li className={isCurrentViewOverview() ? 'current' : ''}\r\n\t\t\t\t\t\t\t\t\t\trole={'button'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={showOverview}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tOverview\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li className={isCurrentViewFactory() ? 'current' : ''}\r\n\t\t\t\t\t\t\t\t\t\trole={'button'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={showFactory}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tFactory\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li className={isCurrentViewKennel() ? 'current' : ''}\r\n\t\t\t\t\t\t\t\t\t\trole={'button'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={showKennel}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tKennel\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t\t<div>Total Coins: {totalCoins}</div>\r\n\t\t\t\t\t\t</header>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</GameContext.Consumer>\r\n\t\t\t)}\r\n\t\t</ViewContext.Consumer>\r\n\t);\r\n}","import './App.scss';\nimport {createContext, useState} from 'react';\nimport Overview from './components/overview/Overview';\nimport Factory from './components/factory/Factory';\nimport Kennel from './components/kennel/Kennel';\nimport {GameWrapper} from './components/GameWrapper';\nimport Header from './components/Header';\n\n\nconst views = {\n\toverview: 'OVERVIEW',\n\tfactory: 'FACTORY',\n\tkennel: 'KENNEL'\n};\n\nexport const ViewContext = createContext();\n\nfunction App () {\n\tconst [currentView, setCurrentView] = useState(views.overview);\n\n\tlet viewContent;\n\n\tif (currentView === views.factory) {\n\t\tviewContent = <Factory/>;\n\t}\n\telse if (currentView === views.kennel) {\n\t\tviewContent = <Kennel/>;\n\t}\n\telse {  // views.overview\n\t\tviewContent = <Overview/>;\n\t}\n\n\treturn (\n\t\t<ViewContext.Provider value={{\n\t\t\tshowOverview: () => setCurrentView(views.overview),\n\t\t\tshowFactory: () => setCurrentView(views.factory),\n\t\t\tshowKennel: () => setCurrentView(views.kennel),\n\t\t\tisCurrentViewOverview: () => currentView === views.overview,\n\t\t\tisCurrentViewFactory: () => currentView === views.factory,\n\t\t\tisCurrentViewKennel: () => currentView === views.kennel\n\t\t}}>\n\t\t\t<GameWrapper>\n\t\t\t\t<div className=\"dashboard\">\n\t\t\t\t\t<Header/>\n\t\t\t\t\t{viewContent}\n\t\t\t\t</div>\n\t\t\t</GameWrapper>\n\t\t</ViewContext.Provider>\n\t);\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}