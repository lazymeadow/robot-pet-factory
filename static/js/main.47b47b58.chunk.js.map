{"version":3,"sources":["components/overview/Overview.js","components/TwoPanel.js","components/Tabs.js","components/game/data.js","components/game/GameWrapper.js","components/factory/Factory.js","components/kennel/Kennel.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Overview","ViewContext","Consumer","showFactory","showKennel","className","onClick","TwoPanel","tabsContent","mainContent","TabContext","createContext","Tabs","children","useState","currentTab","setCurrentTab","Provider","value","isCurrentTab","tabKey","TabsContainer","Tab","role","TabContent","defaultFactoryUpgrades","id","name","description","clickIncrement","clickMultiplier","cost","isUnlocked","unlockableUpgrades","factory","state","upgrades","findIndex","upgrade","GameContext","actionTypes","saveState","localStorage","setItem","JSON","stringify","gameReducer","action","newState","type","totalClicks","numCoinsToAdd","reduce","acc","cur","totalCoins","payload","item","find","GameWrapper","useReducer","gameState","parse","getItem","dispatch","recordClick","addCoins","buyUpgrade","getAvailableUpgrades","filter","purchased","Factory","map","extraClass","helperText","src","alt","Kennel","Header","isCurrentViewFactory","isCurrentViewKennel","isCurrentViewOverview","showOverview","views","App","viewContent","currentView","setCurrentView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAGe,SAASA,IACvB,OACC,cAACC,EAAYC,SAAb,UACE,gBAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,WAAf,OACA,sBAAKC,UAAU,WAAf,UACC,gCACC,yCACA,+BACC,mDACA,kDAED,wBAAQC,QAASH,EAAjB,8BAED,gCACC,4CACA,+BACC,mDACA,kDAED,wBAAQG,QAASF,EAAjB,iCCtBS,SAASG,EAAT,GAAgD,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,YAC/C,OACC,sBAAKJ,UAAU,YAAf,UACC,qBAAKA,UAAU,aAAf,SACEG,IAEF,qBAAKH,UAAU,aAAf,SACEI,OCJL,IAAMC,EAAaC,0BAEnB,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,SAAW,EACUC,mBAAS,GADnB,mBACnBC,EADmB,KACPC,EADO,KAE1B,OACC,cAACN,EAAWO,SAAZ,CAAqBC,MAAO,CAC3BH,aACAC,gBACAG,aAAc,SAACC,GAAD,OAAYL,IAAeK,IAH1C,SAKEP,IAKJ,SAASQ,EAAT,GAAqC,IAAZR,EAAW,EAAXA,SACxB,OACC,qBAAKR,UAAW,iBAAhB,SACEQ,IAKJ,SAASS,EAAT,GAAmC,IAApBT,EAAmB,EAAnBA,SAAUO,EAAS,EAATA,OACxB,OACC,cAACV,EAAWR,SAAZ,UACE,gBAAEiB,EAAF,EAAEA,aAAcH,EAAhB,EAAgBA,cAAhB,OACA,qBAAKX,UAAS,aAAQc,EAAaC,GAAU,WAAa,IACxDG,KAAM,SACNjB,QAASa,EAAaC,GAAU,KAAO,kBAAMJ,EAAcI,IAF7D,SAIEP,OAON,SAASW,EAAT,GAA0C,IAApBX,EAAmB,EAAnBA,SAAUO,EAAS,EAATA,OAC/B,OACC,cAACV,EAAWR,SAAZ,UACE,mBAAoBiB,EAApB,EAAEA,cAA+BC,IACjC,qBAAKf,UAAW,cAAhB,SACEQ,O,kBC9COY,EAAyB,CAAC,CACtCC,GAAI,SACJC,KAAM,QACNC,YAAa,4BACbC,eAAgB,EAChBC,gBAAiB,EACjBC,KAAM,EACNC,WAAY,kBAAM,KAGNC,EAAqB,CACjCC,QAAQ,GAAD,OACHT,EADG,CAEN,CACCC,GAAI,SACJC,KAAM,aACNC,YAAa,kCACbC,eAAgB,EAChBC,gBAAiB,EACjBC,KAAM,IACNC,WAAY,SAACG,GAAD,OAAWA,EAAMC,SAASC,WAAU,SAAAC,GAAO,MAAmB,WAAfA,EAAQZ,OAAoB,OChBpFa,EAAc5B,0BAEd6B,EACK,YADLA,EAEQ,eAFRA,EAGO,cAGPC,EAAY,SAACN,GAClBO,aAAaC,QAAQ,YAAaC,KAAKC,UAAUV,KAO5CW,EAAc,SAACX,EAAOY,GAC3B,IAAIC,EACJ,OAAQD,EAAOE,MACd,KAAKT,EACJ,IAAIU,EAAcf,EAAMe,YAAc,EAGtC,OAFAF,EAAQ,2BAAOb,GAAP,IAAce,gBACtBT,EAAUO,GACHA,EACR,KAAKR,EACJ,IAGMW,GAAiB,EAHLhB,EAAMC,SAASgB,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAIzB,iBAAgB,IAC/DM,EAAMC,SAASgB,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAIxB,kBAAiB,GAI1EyB,EAAapB,EAAMoB,WAAaJ,EAItC,OAFAH,EAAQ,2BAAOb,GAAP,IAAcoB,eACtBd,EAAUO,GACHA,EACR,KAAKR,EACJ,GAAIL,EAAMC,SAASC,WAAU,SAAAC,GAAO,OAAIA,EAAQZ,KAAOqB,EAAOS,QAAQ9B,OAAO,EAC5E,OAAOS,EAER,IAAMsB,EAAOxB,EAAmBc,EAAOS,QAAQP,MAAMS,MAAK,SAAApB,GAAO,OAAIA,EAAQZ,KAAOqB,EAAOS,QAAQ9B,MACnG,OAAIS,EAAMoB,WAAaE,EAAK1B,KACpBI,GAGRa,EAAQ,2BAAOb,GAAP,IAAcC,SAAS,GAAD,mBAAMD,EAAMC,UAAZ,CAAsBqB,IAAOF,WAAYpB,EAAMoB,WAAaE,EAAK1B,OAC/FU,EAAUO,GACHA,GACR,QACC,OAAOb,IAIV,SAASwB,EAAT,GAAmC,IAAZ9C,EAAW,EAAXA,SAAW,EAaP+C,qBAAWd,EAAa,IAZ1B,WACvB,IAAMe,EAzCAjB,KAAKkB,MAAMpB,aAAaqB,QAAQ,cA0CtC,OAAkB,OAAdF,EACIA,EAED,CACNX,YAAa,EACbK,WAAY,EACZnB,SAAUX,MATqB,mBAa1BU,EAb0B,KAanB6B,EAbmB,KAwBjC,OACC,cAACzB,EAAYtB,SAAb,CAAsBC,MAAK,2BAEtBiB,GAFsB,IAGzB8B,YAAa,kBAAMD,EAAS,CAACf,KAAMT,KACnC0B,SAAU,kBAAMF,EAAS,CAACf,KAAMT,KAChC2B,WAAY,SAAClB,EAAMvB,GAAP,OAAcsC,EAAS,CAACf,KAAMT,EAAwBgB,QAAS,CAACP,OAAMvB,SAClF0C,qBAhB0B,SAACnB,GAE7B,OADqBhB,EAAmBgB,GACpBoB,QAAO,SAAA/B,GAG1B,OADAA,EAAQgC,UAAYnC,EAAMC,SAASC,WAAU,SAACnB,GAAD,OAAWA,EAAMQ,KAAOY,EAAQZ,OAAO,EAC7EY,EAAQN,WAAWG,SAK3B,SASEtB,ICpFW,SAAS0D,IA2EvB,OACC,cAAChE,EAAD,CAAUC,YA1EV,cAAC+B,EAAYrC,SAAb,UACE,gBAAEiE,EAAF,EAAEA,WAAYC,EAAd,EAAcA,qBAAsBlB,EAApC,EAAoCA,YAAaK,EAAjD,EAAiDA,WAAjD,OACA,qCACC,yCACA,eAAC3C,EAAD,WACC,eAACS,EAAD,WACC,cAACC,EAAD,CAAKF,OAAQ,EAAb,sBACA,cAACE,EAAD,CAAKF,OAAQ,EAAb,mBACA,cAACE,EAAD,CAAKF,OAAQ,EAAb,6BAED,cAACI,EAAD,CAAYJ,OAAQ,EAApB,SACEgD,EAAqB,WAAWI,KAAI,SAAAlC,GACpC,IAAImC,EAAa,GACbC,EAAa,GAajB,OAZIpC,EAAQgC,WACXG,EAAa,cACbC,EAAa,0BAELpC,EAAQP,KAAOwB,GACvBkB,EAAa,YACbC,EAAa,2BAGbA,EAAa,oBAIb,sBACErE,UAAS,kBAAaoE,GACtBlD,KAAM,SACNjB,QAAS,kBAAM6D,EAAW,UAAW7B,EAAQZ,KAH/C,UAKC,6BAAKY,EAAQX,OACb,4BAAIW,EAAQV,cACZ,gCAAQ8C,MAPCpC,EAAQZ,SAYrB,eAACF,EAAD,CAAYJ,OAAQ,EAApB,0BAEC,+BACC,+CAAkB8B,KAClB,+CAAkBK,WAGpB,cAAC/B,EAAD,CAAYJ,OAAQ,EAApB,0CA4BiCX,YApBrC,cAAC8B,EAAYrC,SAAb,UACE,gBAAEgE,EAAF,EAAEA,SAAUD,EAAZ,EAAYA,YAAa7B,EAAzB,EAAyBA,SAAzB,OACA,qCACC,wBAAQ/B,UAAW,UAAWC,QAAS,WACtC2D,IACAC,KAFD,SAIC,qBAAKS,IAAK,GAAIC,IAAK,kBAEpB,8BACC,6BACExC,EAASoC,KAAI,SAAAlC,GAAO,OAAI,6BAAsBA,EAAQX,MAArBW,EAAQZ,mBCrElC,SAASmD,IAKvB,OACC,cAAC5E,EAAYC,SAAb,UACE,kBACA,cAACK,EAAD,CAAUC,YAPY,wCAOeC,YALf,qBCHX,SAASqE,IACvB,OACC,cAAC7E,EAAYC,SAAb,UACE,gBAAE6E,EAAF,EAAEA,qBAAsBC,EAAxB,EAAwBA,oBAAqBC,EAA7C,EAA6CA,sBAAuB9E,EAApE,EAAoEA,YAAaC,EAAjF,EAAiFA,WAAY8E,EAA7F,EAA6FA,aAA7F,OACA,cAAC3C,EAAYrC,SAAb,UACE,gBAAEqD,EAAF,EAAEA,WAAF,OACA,mCACC,oBAAIhC,KAAM,SAAUjB,QAAS4E,EAA7B,+BACA,8BACC,+BACC,oBAAI7E,UAAW4E,IAA0B,UAAY,GACpD1D,KAAM,SACNjB,QAAS4E,EAFV,sBAMA,oBAAI7E,UAAW0E,IAAyB,UAAY,GACnDxD,KAAM,SACNjB,QAASH,EAFV,qBAMA,oBAAIE,UAAW2E,IAAwB,UAAY,GAClDzD,KAAM,SACNjB,QAASF,EAFV,yBAQF,gDAAmBmD,cCzB1B,IAAM4B,EACK,WADLA,EAEI,UAFJA,EAGG,SAGIlF,EAAcU,0BAqCZyE,MAnCf,WAAiB,IAGZC,EAHW,EACuBvE,mBAASqE,GADhC,mBACRG,EADQ,KACKC,EADL,KAef,OATCF,EADGC,IAAgBH,EACL,cAACZ,EAAD,IAENe,IAAgBH,EACV,cAACN,EAAD,IAGA,cAAC7E,EAAD,IAId,cAACC,EAAYgB,SAAb,CAAsBC,MAAO,CAC5BgE,aAAc,kBAAMK,EAAeJ,IACnChF,YAAa,kBAAMoF,EAAeJ,IAClC/E,WAAY,kBAAMmF,EAAeJ,IACjCF,sBAAuB,kBAAMK,IAAgBH,GAC7CJ,qBAAsB,kBAAMO,IAAgBH,GAC5CH,oBAAqB,kBAAMM,IAAgBH,IAN5C,SAQC,cAACxB,EAAD,UACC,sBAAKtD,UAAU,YAAf,UACC,cAACyE,EAAD,IACCO,UChCSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.47b47b58.chunk.js","sourcesContent":["import {ViewContext} from '../../App';\r\n\r\n\r\nexport default function Overview () {\r\n\treturn (\r\n\t\t<ViewContext.Consumer>\r\n\t\t\t{({showFactory, showKennel}) => (\r\n\t\t\t\t<div className=\"overview\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Factory</h2>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>Interesting Stats</li>\r\n\t\t\t\t\t\t\t<li>What are they</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<button onClick={showFactory}>Go to Factory</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Pet Kennel</h2>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>Interesting Stats</li>\r\n\t\t\t\t\t\t\t<li>What are they</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<button onClick={showKennel}>Go to Pets</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</ViewContext.Consumer>\r\n\t);\r\n}","export default function TwoPanel ({tabsContent, mainContent}) {\r\n\treturn (\r\n\t\t<div className=\"two-panel\">\r\n\t\t\t<div className=\"tabs-panel\">\r\n\t\t\t\t{tabsContent}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"main-panel\">\r\n\t\t\t\t{mainContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import {createContext, useState} from 'react';\r\n\r\n\r\nconst TabContext = createContext();\r\n\r\nfunction Tabs ({children}) {\r\n\tconst [currentTab, setCurrentTab] = useState(0);\r\n\treturn (\r\n\t\t<TabContext.Provider value={{\r\n\t\t\tcurrentTab,\r\n\t\t\tsetCurrentTab,\r\n\t\t\tisCurrentTab: (tabKey) => currentTab === tabKey\r\n\t\t}}>\r\n\t\t\t{children}\r\n\t\t</TabContext.Provider>\r\n\t);\r\n}\r\n\r\nfunction TabsContainer ({children}) {\r\n\treturn (\r\n\t\t<div className={'tabs-container'}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Tab ({children, tabKey}) {\r\n\treturn (\r\n\t\t<TabContext.Consumer>\r\n\t\t\t{({isCurrentTab, setCurrentTab}) => (\r\n\t\t\t\t<div className={`tab${isCurrentTab(tabKey) ? ' current' : ''}`}\r\n\t\t\t\t\t role={'button'}\r\n\t\t\t\t\t onClick={isCurrentTab(tabKey) ? null : () => setCurrentTab(tabKey)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</TabContext.Consumer>\r\n\t);\r\n}\r\n\r\nfunction TabContent ({children, tabKey}) {\r\n\treturn (\r\n\t\t<TabContext.Consumer>\r\n\t\t\t{({isCurrentTab}) => isCurrentTab(tabKey) && (\r\n\t\t\t\t<div className={'tab-content'}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</TabContext.Consumer>\r\n\t);\r\n}\r\n\r\nexport {TabsContainer, Tab, Tabs, TabContent};","export const defaultFactoryUpgrades = [{\r\n\tid: 'wires0',\r\n\tname: 'Wires',\r\n\tdescription: 'Every click makes a wire.',\r\n\tclickIncrement: 0,\r\n\tclickMultiplier: 1,\r\n\tcost: 0,\r\n\tisUnlocked: () => true\r\n}];\r\n\r\nexport const unlockableUpgrades = {\r\n\tfactory: [\r\n\t\t...defaultFactoryUpgrades,\r\n\t\t{\r\n\t\t\tid: 'wires1',\r\n\t\t\tname: 'More Wires',\r\n\t\t\tdescription: 'Every click makes you two wires',\r\n\t\t\tclickIncrement: 1,  // this is how many extra clicks you get for this\r\n\t\t\tclickMultiplier: 1,  // this is the multiplier, applied after increment total\r\n\t\t\tcost: 100,\r\n\t\t\tisUnlocked: (state) => state.upgrades.findIndex(upgrade => upgrade.id === 'wires0') >= 0\r\n\t\t}\r\n\t]\r\n};","import {createContext, useReducer} from 'react';\r\nimport {defaultFactoryUpgrades, unlockableUpgrades} from './data';\r\n\r\n\r\nconst GameContext = createContext();\r\n\r\nconst actionTypes = {\r\n\taddCoins: 'ADD_COINS',\r\n\trecordClick: 'RECORD_CLICK',\r\n\tbuyUpgrade: 'BUY_UPGRADE'\r\n};\r\n\r\nconst saveState = (state) => {\r\n\tlocalStorage.setItem('gameState', JSON.stringify(state));\r\n};\r\n\r\nconst loadState = () => {\r\n\treturn JSON.parse(localStorage.getItem('gameState'));\r\n};\r\n\r\nconst gameReducer = (state, action) => {\r\n\tlet newState;\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.recordClick:\r\n\t\t\tlet totalClicks = state.totalClicks + 1;\r\n\t\t\tnewState = {...state, totalClicks};\r\n\t\t\tsaveState(newState);\r\n\t\t\treturn newState;\r\n\t\tcase actionTypes.addCoins:\r\n\t\t\tlet extraClicks = state.upgrades.reduce((acc, cur) => acc + cur.clickIncrement, 0);\r\n\t\t\tlet multiplier = state.upgrades.reduce((acc, cur) => acc * cur.clickMultiplier, 1);\r\n\t\t\t// calculate the coins to add: always use multiplier on the total clicks\r\n\t\t\tconst numCoinsToAdd = (1 + extraClicks) * multiplier;\r\n\r\n\t\t\tconst totalCoins = state.totalCoins + numCoinsToAdd;\r\n\r\n\t\t\tnewState = {...state, totalCoins};\r\n\t\t\tsaveState(newState);\r\n\t\t\treturn newState;\r\n\t\tcase actionTypes.buyUpgrade:\r\n\t\t\tif (state.upgrades.findIndex(upgrade => upgrade.id === action.payload.id) >= 0) {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\t\tconst item = unlockableUpgrades[action.payload.type].find(upgrade => upgrade.id === action.payload.id);\r\n\t\t\tif (state.totalCoins < item.cost) {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\r\n\t\t\tnewState = {...state, upgrades: [...state.upgrades, item], totalCoins: state.totalCoins - item.cost};\r\n\t\t\tsaveState(newState);\r\n\t\t\treturn newState;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nfunction GameWrapper ({children}) {\r\n\tconst getInitialState = () => {\r\n\t\tconst gameState = loadState();\r\n\t\tif (gameState !== null) {\r\n\t\t\treturn gameState;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\ttotalClicks: 0,\r\n\t\t\ttotalCoins: 0,\r\n\t\t\tupgrades: defaultFactoryUpgrades\r\n\t\t};\r\n\t};\r\n\r\n\tconst [state, dispatch] = useReducer(gameReducer, {}, getInitialState);\r\n\r\n\tconst getAvailableUpgrades = (type) => {\r\n\t\tconst upgradesList = unlockableUpgrades[type];\r\n\t\treturn upgradesList.filter(upgrade => {\r\n\t\t\t// the upgrade must not have been purchased AND must be available by upgrade criteria\r\n\t\t\tupgrade.purchased = state.upgrades.findIndex((value) => value.id === upgrade.id) >= 0;\r\n\t\t\treturn upgrade.isUnlocked(state);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GameContext.Provider value={\r\n\t\t\t{\r\n\t\t\t\t...state,\r\n\t\t\t\trecordClick: () => dispatch({type: actionTypes.recordClick}),\r\n\t\t\t\taddCoins: () => dispatch({type: actionTypes.addCoins}),\r\n\t\t\t\tbuyUpgrade: (type, id) => dispatch({type: actionTypes.buyUpgrade, payload: {type, id}}),\r\n\t\t\t\tgetAvailableUpgrades\r\n\t\t\t}\r\n\t\t}>\r\n\t\t\t{children}\r\n\t\t</GameContext.Provider>\r\n\t);\r\n}\r\n\r\nexport {GameContext, GameWrapper};","// import {ViewContext} from '../../App';\r\nimport TwoPanel from '../TwoPanel';\r\nimport {Tab, TabContent, Tabs, TabsContainer} from '../Tabs';\r\nimport {GameContext} from '../game/GameWrapper';\r\n\r\n\r\nexport default function Factory () {\r\n\tconst renderTabs = () => (\r\n\t\t<GameContext.Consumer>\r\n\t\t\t{({buyUpgrade, getAvailableUpgrades, totalClicks, totalCoins}) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h2>Factory</h2>\r\n\t\t\t\t\t<Tabs>\r\n\t\t\t\t\t\t<TabsContainer>\r\n\t\t\t\t\t\t\t<Tab tabKey={0}>Upgrades</Tab>\r\n\t\t\t\t\t\t\t<Tab tabKey={1}>Stats</Tab>\r\n\t\t\t\t\t\t\t<Tab tabKey={2}>Achievements</Tab>\r\n\t\t\t\t\t\t</TabsContainer>\r\n\t\t\t\t\t\t<TabContent tabKey={0}>\r\n\t\t\t\t\t\t\t{getAvailableUpgrades('factory').map(upgrade => {\r\n\t\t\t\t\t\t\t\tlet extraClass = '';\r\n\t\t\t\t\t\t\t\tlet helperText = '';\r\n\t\t\t\t\t\t\t\tif (upgrade.purchased) {\r\n\t\t\t\t\t\t\t\t\textraClass = 'unavailable';\r\n\t\t\t\t\t\t\t\t\thelperText = 'You already have this!';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (upgrade.cost > totalCoins) {\r\n\t\t\t\t\t\t\t\t\textraClass = 'expensive';\r\n\t\t\t\t\t\t\t\t\thelperText = 'You can\\'t buy this yet.';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\thelperText = 'You can buy this!';\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={upgrade.id}\r\n\t\t\t\t\t\t\t\t\t\t className={`upgrade ${extraClass}`}\r\n\t\t\t\t\t\t\t\t\t\t role={'button'}\r\n\t\t\t\t\t\t\t\t\t\t onClick={() => buyUpgrade('factory', upgrade.id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<h3>{upgrade.name}</h3>\r\n\t\t\t\t\t\t\t\t\t\t<p>{upgrade.description}</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>{helperText}</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TabContent>\r\n\t\t\t\t\t\t<TabContent tabKey={1}>\r\n\t\t\t\t\t\t\tStats go here\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>Click Count: {totalClicks}</li>\r\n\t\t\t\t\t\t\t\t<li>Total Coins: {totalCoins}</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</TabContent>\r\n\t\t\t\t\t\t<TabContent tabKey={2}>Achivements go here</TabContent>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</GameContext.Consumer>\r\n\t);\r\n\r\n\tconst renderMain = () => (\r\n\t\t<GameContext.Consumer>\r\n\t\t\t{({addCoins, recordClick, upgrades}) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button className={'factory'} onClick={() => {\r\n\t\t\t\t\t\trecordClick();\r\n\t\t\t\t\t\taddCoins();\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<img src={''} alt={'the factory'}/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t{upgrades.map(upgrade => <li key={upgrade.id}>{upgrade.name}</li>)}\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</GameContext.Consumer>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TwoPanel tabsContent={renderTabs()} mainContent={renderMain()}/>\r\n\t);\r\n}","import {ViewContext} from '../../App';\r\nimport TwoPanel from '../TwoPanel';\r\n\r\n\r\nexport default function Kennel () {\r\n\tconst renderTabs = () => <h2>Kennel</h2>;\r\n\r\n\tconst renderMain = () => \"it's exciting\";\r\n\r\n\treturn (\r\n\t\t<ViewContext.Consumer>\r\n\t\t\t{() => (\r\n\t\t\t\t<TwoPanel tabsContent={renderTabs()} mainContent={renderMain()} />\r\n\t\t\t)}\r\n\t\t</ViewContext.Consumer>\r\n\t);\r\n}","import {GameContext} from './game/GameWrapper';\r\nimport {ViewContext} from '../App';\r\n\r\n\r\nexport default function Header () {\r\n\treturn (\r\n\t\t<ViewContext.Consumer>\r\n\t\t\t{({isCurrentViewFactory, isCurrentViewKennel, isCurrentViewOverview, showFactory, showKennel, showOverview}) => (\r\n\t\t\t\t<GameContext.Consumer>\r\n\t\t\t\t\t{({totalCoins}) => (\r\n\t\t\t\t\t\t<header>\r\n\t\t\t\t\t\t\t<h1 role={\"button\"} onClick={showOverview}>Robot Pet Factory</h1>\r\n\t\t\t\t\t\t\t<nav>\r\n\t\t\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t\t\t<li className={isCurrentViewOverview() ? 'current' : ''}\r\n\t\t\t\t\t\t\t\t\t\trole={'button'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={showOverview}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tOverview\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li className={isCurrentViewFactory() ? 'current' : ''}\r\n\t\t\t\t\t\t\t\t\t\trole={'button'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={showFactory}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tFactory\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li className={isCurrentViewKennel() ? 'current' : ''}\r\n\t\t\t\t\t\t\t\t\t\trole={'button'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={showKennel}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tKennel\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t\t<div>Total Coins: {totalCoins}</div>\r\n\t\t\t\t\t\t</header>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</GameContext.Consumer>\r\n\t\t\t)}\r\n\t\t</ViewContext.Consumer>\r\n\t);\r\n}","import './App.scss';\nimport {createContext, useState} from 'react';\nimport Overview from './components/overview/Overview';\nimport Factory from './components/factory/Factory';\nimport Kennel from './components/kennel/Kennel';\nimport {GameWrapper} from './components/game/GameWrapper';\nimport Header from './components/Header';\n\n\nconst views = {\n\toverview: 'OVERVIEW',\n\tfactory: 'FACTORY',\n\tkennel: 'KENNEL'\n};\n\nexport const ViewContext = createContext();\n\nfunction App () {\n\tconst [currentView, setCurrentView] = useState(views.overview);\n\n\tlet viewContent;\n\n\tif (currentView === views.factory) {\n\t\tviewContent = <Factory/>;\n\t}\n\telse if (currentView === views.kennel) {\n\t\tviewContent = <Kennel/>;\n\t}\n\telse {  // views.overview\n\t\tviewContent = <Overview/>;\n\t}\n\n\treturn (\n\t\t<ViewContext.Provider value={{\n\t\t\tshowOverview: () => setCurrentView(views.overview),\n\t\t\tshowFactory: () => setCurrentView(views.factory),\n\t\t\tshowKennel: () => setCurrentView(views.kennel),\n\t\t\tisCurrentViewOverview: () => currentView === views.overview,\n\t\t\tisCurrentViewFactory: () => currentView === views.factory,\n\t\t\tisCurrentViewKennel: () => currentView === views.kennel\n\t\t}}>\n\t\t\t<GameWrapper>\n\t\t\t\t<div className=\"dashboard\">\n\t\t\t\t\t<Header/>\n\t\t\t\t\t{viewContent}\n\t\t\t\t</div>\n\t\t\t</GameWrapper>\n\t\t</ViewContext.Provider>\n\t);\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}