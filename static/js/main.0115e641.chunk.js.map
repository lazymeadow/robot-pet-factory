{"version":3,"sources":["components/overview/Overview.js","components/TwoPanel.js","components/Tabs.js","components/game/upgrades.js","components/game/workers.js","components/game/GameWrapper.js","components/factory/Factory.js","components/kennel/Kennel.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Overview","ViewContext","Consumer","showFactory","showKennel","className","onClick","TwoPanel","tabsContent","mainContent","TabContext","createContext","Tabs","children","defaultTabKey","useState","currentTab","setCurrentTab","Provider","value","isCurrentTab","tabKey","TabsContainer","Tab","role","TabContent","Upgrade","name","description","clickIncrement","clickMultiplier","cost","isVisible","state","dependencies","reduce","acc","curr","isUpgradePresent","this","id","upgradeCount","toString","padStart","newFreeIncrementUpgrade","newIncrementUpgrade","newMultiplierUpgrade","newFeatureUpgrade","wires0","unlockWorkers","moreWires1","moreWires2","betterWires1","betterWires2","defaultFactoryUpgrades","upgradeToFind","upgrades","findIndex","upgrade","canSeeWorkers","unlockableUpgrades","factory","intervalIds","updateIntervals","incrementHandler","forEach","intervalId","window","clearInterval","splice","intervalMap","workers","worker","hasOwnProperty","duration","push","values","setInterval","clickQuantity","count","Object","entries","Worker","workerCount","addWorker","worker1","unlockableWorkers","GameContext","actionTypes","saveState","stateToSave","map","fromEntries","localStorage","setItem","JSON","stringify","loadState","type","upgradeIds","loadedState","parse","getItem","filter","includes","workerMap","keys","loadWorkers","totalClicks","totalCoins","lifetimeCoins","handleAutoIncrement","dispatch","coins","payload","gameReducer","action","newState","numCoinsToAdd","cur","addedCoins","item","find","foundWorker","workerToAdd","GameWrapper","useReducer","recordClick","addCoins","buyUpgrade","buyWorker","getAvailableUpgrades","purchased","getAvailableWorkers","Factory","availableUpgrades","availableWorkers","extraClass","helperText","src","alt","Kennel","Header","isCurrentViewFactory","isCurrentViewKennel","isCurrentViewOverview","showOverview","views","App","viewContent","currentView","setCurrentView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0115e641.chunk.js","sourcesContent":["import {ViewContext} from '../../App';\r\n\r\n\r\nexport default function Overview () {\r\n\treturn (\r\n\t\t<ViewContext.Consumer>\r\n\t\t\t{({showFactory, showKennel}) => (\r\n\t\t\t\t<div className=\"overview\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Factory</h2>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>Interesting Stats</li>\r\n\t\t\t\t\t\t\t<li>What are they</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<button onClick={showFactory}>Go to Factory</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Pet Kennel</h2>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>Interesting Stats</li>\r\n\t\t\t\t\t\t\t<li>What are they</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<button onClick={showKennel}>Go to Pets</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</ViewContext.Consumer>\r\n\t);\r\n}","export default function TwoPanel ({tabsContent, mainContent}) {\r\n\treturn (\r\n\t\t<div className=\"two-panel\">\r\n\t\t\t<div className=\"tabs-panel\">\r\n\t\t\t\t{tabsContent}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"main-panel\">\r\n\t\t\t\t{mainContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import {createContext, useState} from 'react';\r\n\r\n\r\nconst TabContext = createContext();\r\n\r\nfunction Tabs ({children, defaultTabKey}) {\r\n\tconst [currentTab, setCurrentTab] = useState(defaultTabKey);\r\n\treturn (\r\n\t\t<TabContext.Provider value={{\r\n\t\t\tcurrentTab,\r\n\t\t\tsetCurrentTab,\r\n\t\t\tisCurrentTab: (tabKey) => currentTab === tabKey\r\n\t\t}}>\r\n\t\t\t{children}\r\n\t\t</TabContext.Provider>\r\n\t);\r\n}\r\n\r\nfunction TabsContainer ({children}) {\r\n\treturn (\r\n\t\t<div className={'tabs-container'}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Tab ({children, tabKey}) {\r\n\treturn (\r\n\t\t<TabContext.Consumer>\r\n\t\t\t{({isCurrentTab, setCurrentTab}) => (\r\n\t\t\t\t<div className={`tab${isCurrentTab(tabKey) ? ' current' : ''}`}\r\n\t\t\t\t\t role={'button'}\r\n\t\t\t\t\t onClick={isCurrentTab(tabKey) ? null : () => setCurrentTab(tabKey)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</TabContext.Consumer>\r\n\t);\r\n}\r\n\r\nfunction TabContent ({children, tabKey}) {\r\n\treturn (\r\n\t\t<TabContext.Consumer>\r\n\t\t\t{({isCurrentTab}) => isCurrentTab(tabKey) && (\r\n\t\t\t\t<div className={'tab-content'}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</TabContext.Consumer>\r\n\t);\r\n}\r\n\r\nexport {TabsContainer, Tab, Tabs, TabContent};","class Upgrade {\r\n\tstatic upgradeCount = 0;\r\n\r\n\tconstructor (\r\n\t\tname,\r\n\t\tdescription,\r\n\t\tclickIncrement = 0,\r\n\t\tclickMultiplier = 1,\r\n\t\tcost = 0,\r\n\t) {\r\n\t\tthis.id = (Upgrade.upgradeCount++).toString().padStart(8, '0');\r\n\t\tthis.name = name;\r\n\t\tthis.description = description;\r\n\t\tthis.clickIncrement = clickIncrement;\r\n\t\tthis.clickMultiplier = clickMultiplier;\r\n\t\tthis.cost = cost;\r\n\t\tthis.dependencies = [];\r\n\t}\r\n\r\n\tisVisible = (state) => {\r\n\t\treturn this.dependencies.reduce((acc, curr) => {\r\n\t\t\treturn acc && isUpgradePresent(state, curr)\r\n\t\t}, !isUpgradePresent(state, this));\r\n\t}\r\n\r\n\tstatic newFreeIncrementUpgrade = (name, description, clickIncrement) => {\r\n\t\treturn new Upgrade(name, description, clickIncrement, 1, 0);\r\n\t};\r\n\r\n\tstatic newIncrementUpgrade = (name, description, clickIncrement, cost) => {\r\n\t\treturn new Upgrade(name, description, clickIncrement, 1, cost);\r\n\t};\r\n\r\n\tstatic newMultiplierUpgrade = (name, description, clickMultiplier, cost) => {\r\n\t\treturn new Upgrade(name, description, 0, clickMultiplier, cost);\r\n\t};\r\n\r\n\tstatic newFeatureUpgrade = (name, description, cost) => {\r\n\t\treturn new Upgrade(name, description, 0, 1, cost);\r\n\t}\r\n}\r\n\r\n/* DEFINE UPGRADES */\r\nconst wires0 = Upgrade.newFreeIncrementUpgrade(\r\n\t'Wires',\r\n\t'Every click makes a wire. Wires are worth 1 coin.',\r\n\t1\r\n);\r\n\r\nconst unlockWorkers = Upgrade.newFeatureUpgrade(\r\n\t'Workers',\r\n\t'You can hire robot workers to make your wires automatically.',\r\n\t200\r\n);\r\n\r\nconst moreWires1 = Upgrade.newIncrementUpgrade(\r\n\t'More Wires',\r\n\t'Every click makes two wires.',\r\n\t1,\r\n\t100\r\n);\r\nconst moreWires2 = Upgrade.newIncrementUpgrade(\r\n\t'Even More Wires',\r\n\t'Every click makes four wires.',\r\n\t2,\r\n\t500\r\n);\r\nconst betterWires1 = Upgrade.newMultiplierUpgrade(\r\n\t'Better Wires',\r\n\t'Your wires are better, and are worth twice as much.',\r\n\t2,\r\n\t100\r\n);\r\nconst betterWires2 = Upgrade.newMultiplierUpgrade(\r\n\t'Even Better Wires',\r\n\t'Your wires are better, and are worth four times as much.',\r\n\t2,\r\n\t500\r\n);\r\n\r\n/* SET UPGRADE DEPENDENCIES */\r\nunlockWorkers.dependencies = [moreWires1, betterWires1];\r\nmoreWires1.dependencies = [wires0];\r\nmoreWires2.dependencies = [moreWires1];\r\nbetterWires1.dependencies = [wires0];\r\nbetterWires2.dependencies = [betterWires1];\r\n\r\nexport const defaultFactoryUpgrades = [\r\n\twires0\r\n];\r\n\r\nconst isUpgradePresent = (state, upgradeToFind) => {\r\n\treturn state.upgrades.findIndex(upgrade => upgrade.id === upgradeToFind.id) >= 0;\r\n};\r\n\r\nexport const canSeeWorkers = (state) => isUpgradePresent(state, unlockWorkers);\r\n\r\nexport const unlockableUpgrades = {\r\n\tfactory: [\r\n\t\t...defaultFactoryUpgrades,\r\n\t\tmoreWires1,\r\n\t\tmoreWires2,\r\n\t\tbetterWires1,\r\n\t\tbetterWires2,\r\n\t\tunlockWorkers,\r\n\t]\r\n};\r\n\r\nexport const loadUpgrades = (type, upgradeIds) => {\r\n\treturn unlockableUpgrades[type].filter(upgrade => upgradeIds.includes(upgrade.id));\r\n};\r\n","import {canSeeWorkers} from './upgrades';\r\n\r\n\r\nconst intervalIds = [];\r\nexport const updateIntervals = (state, incrementHandler) => {\r\n\t// first clean up all the existing intervals\r\n\tintervalIds.forEach(intervalId => window.clearInterval(intervalId));\r\n\tintervalIds.splice(0);\r\n\t// then go make new intervals for the items that already exist.\r\n\t// map the intervals by duration\r\n\tconst intervalMap = {};\r\n\tstate.workers.forEach(worker => {\r\n\t\tif (!intervalMap.hasOwnProperty(worker.duration)) {\r\n\t\t\tintervalMap[worker.duration] = [];\r\n\t\t}\r\n\t\tintervalMap[worker.duration].push(worker);\r\n\t});\r\n\tfor (const [duration, values] of Object.entries(intervalMap)) {\r\n\t\tintervalIds.push(\r\n\t\t\twindow.setInterval(() => {\r\n\t\t\t\t\tincrementHandler(values.reduce((acc, value) => acc + (value.clickQuantity * value.count), 0));\r\n\t\t\t\t},\r\n\t\t\t\tduration\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n};\r\n\r\nclass Worker {\r\n\tstatic workerCount = 0;\r\n\r\n\tconstructor (name, description, duration, clickQuantity, cost) {\r\n\t\tthis.id = (Worker.workerCount++).toString().padStart(8, '0');\r\n\t\tthis.name = name;\r\n\t\tthis.description = description;\r\n\t\tthis.duration = duration;\r\n\t\tthis.clickQuantity = clickQuantity;\r\n\t\tthis.cost = cost;\r\n\t\tthis.count = 0;\r\n\t\tthis.addWorker = () => this.count++;\r\n\t}\r\n\r\n\tisVisible = (state) => canSeeWorkers(state);\r\n}\r\n\r\nconst worker1 = new Worker(\r\n\t'Mouse Droid',\r\n\t'They don\\'t do much, but they can make 1 wire every 3 seconds. How? You don\\'t wanna know.',\r\n\t3000,\r\n\t1,\r\n\t25\r\n);\r\n\r\nexport const getWorkerById = (type, id) => unlockableWorkers[type].find(worker => worker.id === id);\r\n\r\nexport const unlockableWorkers = {\r\n\tfactory: [\r\n\t\tworker1\r\n\t]\r\n};\r\n\r\nexport const loadWorkers = (type, workerMap) => {\r\n\tconst workers = unlockableWorkers[type].filter(worker => Object.keys(workerMap).includes(worker.id));\r\n\tworkers.forEach(worker => worker.count = workerMap[worker.id]);\r\n\treturn workers;\r\n};","import {createContext, useReducer} from 'react';\r\nimport {canSeeWorkers, defaultFactoryUpgrades, loadUpgrades, unlockableUpgrades} from './upgrades';\r\nimport {getWorkerById, loadWorkers, unlockableWorkers, updateIntervals} from './workers';\r\n\r\n\r\nconst GameContext = createContext();\r\n\r\nconst actionTypes = {\r\n\taddCoins: 'ADD_COINS',\r\n\tautoAddCoins: 'AUTO_ADD_COINS',\r\n\trecordClick: 'RECORD_CLICK',\r\n\tbuyUpgrade: 'BUY_UPGRADE',\r\n\tbuyWorker: 'BUY_WORKER'\r\n};\r\n\r\nconst saveState = (state) => {\r\n\tconst stateToSave = {\r\n\t\t...state,\r\n\t\tupgrades: state.upgrades.map(upgrade => upgrade.id),\r\n\t\tworkers: Object.fromEntries(state.workers.map(worker => [worker.id, worker.count]))\r\n\t};\r\n\r\n\tlocalStorage.setItem('gameState', JSON.stringify(stateToSave));\r\n};\r\n\r\nconst loadState = () => {\r\n\tconst loadedState = JSON.parse(localStorage.getItem('gameState'));\r\n\tif (loadedState !== null) {\r\n\t\tloadedState.upgrades = loadUpgrades('factory', loadedState.upgrades || []);\r\n\t\tloadedState.workers = loadWorkers('factory', loadedState.workers || []);\r\n\t\treturn loadedState;\r\n\t}\r\n\telse {\r\n\t\treturn {\r\n\t\t\ttotalClicks: 0,\r\n\t\t\ttotalCoins: 0,\r\n\t\t\tlifetimeCoins: 0,\r\n\t\t\tworkers: [],\r\n\t\t\tupgrades: defaultFactoryUpgrades\r\n\t\t};\r\n\t}\r\n};\r\n\r\n\r\nconst handleAutoIncrement = (dispatch) => (coins) => {\r\n\tdispatch({type: actionTypes.autoAddCoins, payload: {coins}});\r\n};\r\n\r\nconst gameReducer = (state, action) => {\r\n\tlet newState, totalCoins;\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.recordClick:\r\n\t\t\tlet totalClicks = state.totalClicks + 1;\r\n\t\t\tnewState = {...state, totalClicks};\r\n\t\t\tsaveState(newState);\r\n\t\t\treturn newState;\r\n\t\tcase actionTypes.addCoins:\r\n\t\t\tlet countPerClick = state.upgrades.reduce((acc, cur) => acc + cur.clickIncrement, 0);\r\n\t\t\tlet multiplier = state.upgrades.reduce((acc, cur) => acc * cur.clickMultiplier, 1);\r\n\t\t\t// calculate the coins to add: always use multiplier on the total clicks\r\n\t\t\tconst numCoinsToAdd = (countPerClick) * multiplier;\r\n\r\n\t\t\ttotalCoins = state.totalCoins + numCoinsToAdd;\r\n\r\n\t\t\tnewState = {...state, totalCoins, lifetimeCoins: state.lifetimeCoins + numCoinsToAdd};\r\n\t\t\tsaveState(newState);\r\n\t\t\treturn newState;\r\n\t\tcase actionTypes.autoAddCoins:\r\n\t\t\tconst addedCoins = action.payload.coins;\r\n\t\t\ttotalCoins = state.totalCoins + addedCoins;\r\n\t\t\tnewState = {...state, totalCoins, lifetimeCoins: state.lifetimeCoins + addedCoins};\r\n\t\t\tsaveState(newState);\r\n\t\t\treturn newState;\r\n\t\tcase actionTypes.buyUpgrade:\r\n\t\t\tif (state.upgrades.findIndex(upgrade => upgrade.id === action.payload.id) >= 0) {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\t\tconst item = unlockableUpgrades[action.payload.type].find(upgrade => upgrade.id === action.payload.id);\r\n\t\t\tif (state.totalCoins < item.cost) {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\r\n\t\t\tnewState = {...state, upgrades: [...state.upgrades, item], totalCoins: state.totalCoins - item.cost};\r\n\t\t\tsaveState(newState);\r\n\t\t\treturn newState;\r\n\t\tcase actionTypes.buyWorker:\r\n\t\t\tconst foundWorker = state.workers.find(worker => worker.id === action.payload.id);\r\n\t\t\tif (foundWorker) {\r\n\t\t\t\tif (foundWorker.cost > state.totalCoins) {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t}\r\n\t\t\t\tfoundWorker.addWorker();\r\n\t\t\t\tnewState = {...state, totalCoins: state.totalCoins - foundWorker.cost};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst workerToAdd = getWorkerById(action.payload.type, action.payload.id);\r\n\t\t\t\tif (workerToAdd.cost > state.totalCoins) {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t}\r\n\t\t\t\tworkerToAdd.addWorker();\r\n\t\t\t\tnewState = {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tworkers: [...state.workers, workerToAdd],\r\n\t\t\t\t\ttotalCoins: state.totalCoins - workerToAdd.cost\r\n\t\t\t\t};\r\n\t\t\t\tsaveState(newState);\r\n\t\t\t}\r\n\t\t\treturn newState;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nfunction GameWrapper ({children}) {\r\n\tconst [state, dispatch] = useReducer(gameReducer, {}, loadState);\r\n\r\n\tupdateIntervals(state, handleAutoIncrement(dispatch));\r\n\r\n\tconst getAvailableUpgrades = (type) => {\r\n\t\tconst upgradesList = unlockableUpgrades[type];\r\n\t\treturn upgradesList.filter(upgrade => {\r\n\t\t\t// the upgrade must not have been purchased AND must be available by upgrade criteria\r\n\t\t\tupgrade.purchased = state.upgrades.findIndex((value) => value.id === upgrade.id) >= 0;\r\n\t\t\treturn upgrade.isVisible(state);\r\n\t\t});\r\n\t};\r\n\r\n\tconst getAvailableWorkers = (type) => {\r\n\t\tconst workerList = [...unlockableWorkers[type]];\r\n\t\treturn workerList.filter(worker => worker.isVisible(state));\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<GameContext.Provider value={\r\n\t\t\t{\r\n\t\t\t\t...state,\r\n\t\t\t\trecordClick: () => dispatch({type: actionTypes.recordClick}),\r\n\t\t\t\taddCoins: () => dispatch({type: actionTypes.addCoins}),\r\n\t\t\t\tbuyUpgrade: (type, id) => dispatch({type: actionTypes.buyUpgrade, payload: {type, id}}),\r\n\t\t\t\tbuyWorker: (type, id) => {\r\n\t\t\t\t\tdispatch({type: actionTypes.buyWorker, payload: {type, id}});\r\n\t\t\t\t\tupdateIntervals(state, handleAutoIncrement(dispatch));\r\n\t\t\t\t},\r\n\t\t\t\tgetAvailableUpgrades,\r\n\t\t\t\tgetAvailableWorkers,\r\n\t\t\t\tcanSeeWorkers: canSeeWorkers(state)\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</GameContext.Provider>\r\n\t);\r\n}\r\n\r\nexport {GameContext, GameWrapper};","import TwoPanel from '../TwoPanel';\r\nimport {Tab, TabContent, Tabs, TabsContainer} from '../Tabs';\r\nimport {GameContext} from '../game/GameWrapper';\r\n\r\n\r\nexport default function Factory () {\r\n\tconst renderTabs = () => (\r\n\t\t<GameContext.Consumer>\r\n\t\t\t{({buyUpgrade, buyWorker, canSeeWorkers, getAvailableUpgrades, getAvailableWorkers, lifetimeCoins, totalClicks, totalCoins}) => {\r\n\t\t\t\tconst availableUpgrades = getAvailableUpgrades('factory');\r\n\t\t\t\tconst availableWorkers = getAvailableWorkers('factory');\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h2>Factory</h2>\r\n\t\t\t\t\t\t<Tabs defaultTabKey={'upgrades'}>\r\n\t\t\t\t\t\t\t<TabsContainer>\r\n\t\t\t\t\t\t\t\t<Tab tabKey={'upgrades'}>Upgrades</Tab>\r\n\t\t\t\t\t\t\t\t{canSeeWorkers && <Tab tabKey={'workers'}>Workers</Tab>}\r\n\t\t\t\t\t\t\t\t<Tab tabKey={'stats'}>Stats</Tab>\r\n\t\t\t\t\t\t\t\t<Tab tabKey={'achievements'}>Achievements</Tab>\r\n\t\t\t\t\t\t\t</TabsContainer>\r\n\t\t\t\t\t\t\t<TabContent tabKey={'upgrades'}>\r\n\t\t\t\t\t\t\t\t<span>{totalCoins} C</span>\r\n\t\t\t\t\t\t\t\t{availableUpgrades.map(upgrade => {\r\n\t\t\t\t\t\t\t\t\tlet extraClass = '';\r\n\t\t\t\t\t\t\t\t\tlet helperText = '';\r\n\t\t\t\t\t\t\t\t\tif (upgrade.purchased) {\r\n\t\t\t\t\t\t\t\t\t\textraClass = 'unavailable';\r\n\t\t\t\t\t\t\t\t\t\thelperText = 'You already have this!';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (upgrade.cost > totalCoins) {\r\n\t\t\t\t\t\t\t\t\t\textraClass = 'expensive';\r\n\t\t\t\t\t\t\t\t\t\thelperText = 'You can\\'t buy this yet.';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\thelperText = 'You can buy this!';\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<div key={upgrade.id}\r\n\t\t\t\t\t\t\t\t\t\t\t className={`upgrade ${extraClass}`}\r\n\t\t\t\t\t\t\t\t\t\t\t role={'button'}\r\n\t\t\t\t\t\t\t\t\t\t\t onClick={() => buyUpgrade('factory', upgrade.id)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={'upgrade-title'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>{upgrade.name}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{!upgrade.purchased && <span>COST: {upgrade.cost} C</span>}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{upgrade.description}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<small>{helperText}</small>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</TabContent>\r\n\t\t\t\t\t\t\t<TabContent tabKey={'stats'}>\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>Click Count: {totalClicks}</li>\r\n\t\t\t\t\t\t\t\t\t<li>Total Coins Earned: {lifetimeCoins} C</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</TabContent>\r\n\t\t\t\t\t\t\t<TabContent tabKey={'achievements'}>Achivements go here</TabContent>\r\n\t\t\t\t\t\t\t<TabContent tabKey={'workers'}>\r\n\t\t\t\t\t\t\t\t{availableWorkers.map(worker => {\r\n\t\t\t\t\t\t\t\t\tlet extraClass = '';\r\n\t\t\t\t\t\t\t\t\tlet helperText = '';\r\n\t\t\t\t\t\t\t\t\tif (worker.cost > totalCoins) {\r\n\t\t\t\t\t\t\t\t\t\textraClass = 'expensive';\r\n\t\t\t\t\t\t\t\t\t\thelperText = 'You can\\'t buy this right now.';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\thelperText = 'You can buy this!';\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<div key={worker.id}\r\n\t\t\t\t\t\t\t\t\t\t\t className={`upgrade ${extraClass}`}\r\n\t\t\t\t\t\t\t\t\t\t\t role={'button'}\r\n\t\t\t\t\t\t\t\t\t\t\t onClick={() => buyWorker('factory', worker.id)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={'upgrade-title'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>{worker.name} ({worker.count})</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>COST: {worker.cost} C</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{worker.description}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<small>{helperText}</small>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</TabContent>\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t</GameContext.Consumer>\r\n\t);\r\n\r\n\tconst renderMain = () => (\r\n\t\t<GameContext.Consumer>\r\n\t\t\t{({addCoins, recordClick, upgrades}) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button className={'factory'} onClick={() => {\r\n\t\t\t\t\t\trecordClick();\r\n\t\t\t\t\t\taddCoins();\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<img src={''} alt={'the factory - click to make wires'}/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t{upgrades.map(upgrade => <li key={upgrade.id}>{upgrade.name}</li>)}\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</GameContext.Consumer>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TwoPanel tabsContent={renderTabs()} mainContent={renderMain()}/>\r\n\t);\r\n}","import {ViewContext} from '../../App';\r\nimport TwoPanel from '../TwoPanel';\r\n\r\n\r\nexport default function Kennel () {\r\n\tconst renderTabs = () => <h2>Kennel</h2>;\r\n\r\n\tconst renderMain = () => \"it's exciting\";\r\n\r\n\treturn (\r\n\t\t<ViewContext.Consumer>\r\n\t\t\t{() => (\r\n\t\t\t\t<TwoPanel tabsContent={renderTabs()} mainContent={renderMain()} />\r\n\t\t\t)}\r\n\t\t</ViewContext.Consumer>\r\n\t);\r\n}","import {GameContext} from './game/GameWrapper';\r\nimport {ViewContext} from '../App';\r\n\r\n\r\nexport default function Header () {\r\n\treturn (\r\n\t\t<ViewContext.Consumer>\r\n\t\t\t{({isCurrentViewFactory, isCurrentViewKennel, isCurrentViewOverview, showFactory, showKennel, showOverview}) => (\r\n\t\t\t\t<GameContext.Consumer>\r\n\t\t\t\t\t{({totalCoins}) => (\r\n\t\t\t\t\t\t<header>\r\n\t\t\t\t\t\t\t<h1 role={\"button\"} onClick={showOverview}>Robot Pet Factory</h1>\r\n\t\t\t\t\t\t\t<nav>\r\n\t\t\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t\t\t<li className={isCurrentViewOverview() ? 'current' : ''}\r\n\t\t\t\t\t\t\t\t\t\trole={'button'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={showOverview}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tOverview\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li className={isCurrentViewFactory() ? 'current' : ''}\r\n\t\t\t\t\t\t\t\t\t\trole={'button'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={showFactory}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tFactory\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li className={isCurrentViewKennel() ? 'current' : ''}\r\n\t\t\t\t\t\t\t\t\t\trole={'button'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={showKennel}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tKennel\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t\t<div>{totalCoins} C</div>\r\n\t\t\t\t\t\t</header>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</GameContext.Consumer>\r\n\t\t\t)}\r\n\t\t</ViewContext.Consumer>\r\n\t);\r\n}","import './App.scss';\nimport {createContext, useState} from 'react';\nimport Overview from './components/overview/Overview';\nimport Factory from './components/factory/Factory';\nimport Kennel from './components/kennel/Kennel';\nimport {GameWrapper} from './components/game/GameWrapper';\nimport Header from './components/Header';\n\n\nconst views = {\n\toverview: 'OVERVIEW',\n\tfactory: 'FACTORY',\n\tkennel: 'KENNEL'\n};\n\nexport const ViewContext = createContext();\n\nfunction App () {\n\tconst [currentView, setCurrentView] = useState(views.overview);\n\n\tlet viewContent;\n\n\tif (currentView === views.factory) {\n\t\tviewContent = <Factory/>;\n\t}\n\telse if (currentView === views.kennel) {\n\t\tviewContent = <Kennel/>;\n\t}\n\telse {  // views.overview\n\t\tviewContent = <Overview/>;\n\t}\n\n\treturn (\n\t\t<ViewContext.Provider value={{\n\t\t\tshowOverview: () => setCurrentView(views.overview),\n\t\t\tshowFactory: () => setCurrentView(views.factory),\n\t\t\tshowKennel: () => setCurrentView(views.kennel),\n\t\t\tisCurrentViewOverview: () => currentView === views.overview,\n\t\t\tisCurrentViewFactory: () => currentView === views.factory,\n\t\t\tisCurrentViewKennel: () => currentView === views.kennel\n\t\t}}>\n\t\t\t<GameWrapper>\n\t\t\t\t<div className=\"dashboard\">\n\t\t\t\t\t<Header/>\n\t\t\t\t\t{viewContent}\n\t\t\t\t</div>\n\t\t\t</GameWrapper>\n\t\t</ViewContext.Provider>\n\t);\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n\t// StringMode is making the game reducer double worker count due todouble invocation of the reducer. this is likely\n\t// a big problem but i don't want to deal with it.\n\t// <React.StrictMode>\n\t<App/>,\n\t// </React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}